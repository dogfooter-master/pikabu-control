// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control/pkg/grpc/pb/control.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApiRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiRequest) Reset()         { *m = ApiRequest{} }
func (m *ApiRequest) String() string { return proto.CompactTextString(m) }
func (*ApiRequest) ProtoMessage()    {}
func (*ApiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17dee5e9bb117093, []int{0}
}

func (m *ApiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiRequest.Unmarshal(m, b)
}
func (m *ApiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiRequest.Marshal(b, m, deterministic)
}
func (m *ApiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiRequest.Merge(m, src)
}
func (m *ApiRequest) XXX_Size() int {
	return xxx_messageInfo_ApiRequest.Size(m)
}
func (m *ApiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApiRequest proto.InternalMessageInfo

type ApiReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiReply) Reset()         { *m = ApiReply{} }
func (m *ApiReply) String() string { return proto.CompactTextString(m) }
func (*ApiReply) ProtoMessage()    {}
func (*ApiReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_17dee5e9bb117093, []int{1}
}

func (m *ApiReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiReply.Unmarshal(m, b)
}
func (m *ApiReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiReply.Marshal(b, m, deterministic)
}
func (m *ApiReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiReply.Merge(m, src)
}
func (m *ApiReply) XXX_Size() int {
	return xxx_messageInfo_ApiReply.Size(m)
}
func (m *ApiReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiReply.DiscardUnknown(m)
}

var xxx_messageInfo_ApiReply proto.InternalMessageInfo

type RootRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootRequest) Reset()         { *m = RootRequest{} }
func (m *RootRequest) String() string { return proto.CompactTextString(m) }
func (*RootRequest) ProtoMessage()    {}
func (*RootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17dee5e9bb117093, []int{2}
}

func (m *RootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootRequest.Unmarshal(m, b)
}
func (m *RootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootRequest.Marshal(b, m, deterministic)
}
func (m *RootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootRequest.Merge(m, src)
}
func (m *RootRequest) XXX_Size() int {
	return xxx_messageInfo_RootRequest.Size(m)
}
func (m *RootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RootRequest proto.InternalMessageInfo

type RootReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootReply) Reset()         { *m = RootReply{} }
func (m *RootReply) String() string { return proto.CompactTextString(m) }
func (*RootReply) ProtoMessage()    {}
func (*RootReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_17dee5e9bb117093, []int{3}
}

func (m *RootReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootReply.Unmarshal(m, b)
}
func (m *RootReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootReply.Marshal(b, m, deterministic)
}
func (m *RootReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootReply.Merge(m, src)
}
func (m *RootReply) XXX_Size() int {
	return xxx_messageInfo_RootReply.Size(m)
}
func (m *RootReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RootReply.DiscardUnknown(m)
}

var xxx_messageInfo_RootReply proto.InternalMessageInfo

type FileRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileRequest) Reset()         { *m = FileRequest{} }
func (m *FileRequest) String() string { return proto.CompactTextString(m) }
func (*FileRequest) ProtoMessage()    {}
func (*FileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17dee5e9bb117093, []int{4}
}

func (m *FileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRequest.Unmarshal(m, b)
}
func (m *FileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRequest.Marshal(b, m, deterministic)
}
func (m *FileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRequest.Merge(m, src)
}
func (m *FileRequest) XXX_Size() int {
	return xxx_messageInfo_FileRequest.Size(m)
}
func (m *FileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileRequest proto.InternalMessageInfo

type FileReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileReply) Reset()         { *m = FileReply{} }
func (m *FileReply) String() string { return proto.CompactTextString(m) }
func (*FileReply) ProtoMessage()    {}
func (*FileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_17dee5e9bb117093, []int{5}
}

func (m *FileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileReply.Unmarshal(m, b)
}
func (m *FileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileReply.Marshal(b, m, deterministic)
}
func (m *FileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileReply.Merge(m, src)
}
func (m *FileReply) XXX_Size() int {
	return xxx_messageInfo_FileReply.Size(m)
}
func (m *FileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FileReply.DiscardUnknown(m)
}

var xxx_messageInfo_FileReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ApiRequest)(nil), "pb.ApiRequest")
	proto.RegisterType((*ApiReply)(nil), "pb.ApiReply")
	proto.RegisterType((*RootRequest)(nil), "pb.RootRequest")
	proto.RegisterType((*RootReply)(nil), "pb.RootReply")
	proto.RegisterType((*FileRequest)(nil), "pb.FileRequest")
	proto.RegisterType((*FileReply)(nil), "pb.FileReply")
}

func init() { proto.RegisterFile("control/pkg/grpc/pb/control.proto", fileDescriptor_17dee5e9bb117093) }

var fileDescriptor_17dee5e9bb117093 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0xce, 0xcf, 0x2b,
	0x29, 0xca, 0xcf, 0xd1, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x48, 0xd2,
	0x87, 0x8a, 0xe9, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x31, 0x15, 0x24, 0x29, 0xf1, 0x70, 0x71,
	0x39, 0x16, 0x64, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x71, 0x71, 0x71, 0x80, 0x79,
	0x05, 0x39, 0x95, 0x4a, 0xbc, 0x5c, 0xdc, 0x41, 0xf9, 0xf9, 0x25, 0x30, 0x29, 0x6e, 0x2e, 0x4e,
	0x08, 0x17, 0x2a, 0xe7, 0x96, 0x99, 0x93, 0x8a, 0x24, 0x07, 0xe1, 0x16, 0xe4, 0x54, 0x1a, 0xd5,
	0x71, 0xb1, 0x3b, 0x43, 0xac, 0x11, 0x52, 0xe6, 0x62, 0x76, 0x2c, 0xc8, 0x14, 0xe2, 0xd3, 0x2b,
	0x48, 0xd2, 0x43, 0xd8, 0x22, 0xc5, 0x03, 0xe7, 0x17, 0xe4, 0x54, 0x0a, 0xa9, 0x71, 0xb1, 0x80,
	0x0c, 0x16, 0xe2, 0x07, 0x89, 0x22, 0xd9, 0x28, 0xc5, 0x8b, 0x10, 0x80, 0xaa, 0x03, 0x59, 0x02,
	0x51, 0x87, 0x64, 0x3b, 0x44, 0x1d, 0xdc, 0xfe, 0x24, 0x36, 0xb0, 0xe7, 0x8c, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xdd, 0xc9, 0xa5, 0xea, 0x01, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControlClient is the client API for Control service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlClient interface {
	Api(ctx context.Context, in *ApiRequest, opts ...grpc.CallOption) (*ApiReply, error)
	Root(ctx context.Context, in *RootRequest, opts ...grpc.CallOption) (*RootReply, error)
	File(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileReply, error)
}

type controlClient struct {
	cc *grpc.ClientConn
}

func NewControlClient(cc *grpc.ClientConn) ControlClient {
	return &controlClient{cc}
}

func (c *controlClient) Api(ctx context.Context, in *ApiRequest, opts ...grpc.CallOption) (*ApiReply, error) {
	out := new(ApiReply)
	err := c.cc.Invoke(ctx, "/pb.Control/Api", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Root(ctx context.Context, in *RootRequest, opts ...grpc.CallOption) (*RootReply, error) {
	out := new(RootReply)
	err := c.cc.Invoke(ctx, "/pb.Control/Root", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) File(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileReply, error) {
	out := new(FileReply)
	err := c.cc.Invoke(ctx, "/pb.Control/File", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlServer is the server API for Control service.
type ControlServer interface {
	Api(context.Context, *ApiRequest) (*ApiReply, error)
	Root(context.Context, *RootRequest) (*RootReply, error)
	File(context.Context, *FileRequest) (*FileReply, error)
}

func RegisterControlServer(s *grpc.Server, srv ControlServer) {
	s.RegisterService(&_Control_serviceDesc, srv)
}

func _Control_Api_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Api(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Control/Api",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Api(ctx, req.(*ApiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Root_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Root(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Control/Root",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Root(ctx, req.(*RootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_File_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).File(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Control/File",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).File(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Control_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Control",
	HandlerType: (*ControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Api",
			Handler:    _Control_Api_Handler,
		},
		{
			MethodName: "Root",
			Handler:    _Control_Root_Handler,
		},
		{
			MethodName: "File",
			Handler:    _Control_File_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control/pkg/grpc/pb/control.proto",
}
